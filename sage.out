; ModuleID = 'sage'
source_filename = "sage"

@hello = global [6 x i8] c"hello\00"
@t = global i1 true
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@str = private unnamed_addr constant [5 x i8] c"test\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@str.4 = private unnamed_addr constant [6 x i8] c"world\00", align 1

declare i32 @printf(i8*, ...)

define void @voidTest() {
entry:
  %test = alloca i8*, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str, i32 0, i32 0), i8** %test, align 8
  ret void
}

define i32 @main(i8* %greeting) {
entry:
  %greeting1 = alloca i8*, align 8
  store i8* %greeting, i8** %greeting1, align 8
  %location = alloca i8*, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.4, i32 0, i32 0), i8** %location, align 8
  call void @voidTest()
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i32 3)
  ret i32 0
}
